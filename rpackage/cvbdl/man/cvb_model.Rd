% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvb.R
\name{cvb_model}
\alias{cvb_model}
\title{Collapsed VB solver for coefficients}
\usage{
cvb_model(sigma, rho, X, y, add.intercept = TRUE, MAXITER = 100,
 EPS = 1e-5, verboseIter = FALSE)
}
\arguments{
\item{sigma}{A hyperparameter tuning the regression coefficients' Normal(0,\code{sigma^2}) prior density.}

\item{rho}{A hyperparameter representing the sparsity of the Bernoulli(\code{rho}) prior density for the model selection mask.}

\item{X}{A matrix or vector containing the variables in the model.}

\item{y}{A vector containing the observed binary response for fitting the model.}

\item{add.intercept}{An optional logical for whether to add an intercept column of \code{1}s to the \code{X} input.}

\item{MAXITER}{The maximum number of iterations allowed before concluding that the estimated coefficients do not converge.}

\item{EPS}{The threshold for residuals under which the model coefficients are considered converged.}

\item{verboseIter}{An optional logical for whether to print information about each iteration.}
}
\value{
A list with the regression coefficients \code{mus}, model selection coefficients \code{ws} and logical \code{added.intercept}.
Can be used in the \code{predict_cvb} function to perform classification.
}
\description{
Estimates the regression coefficients \eqn{ \boldsymbol \mu } and model selection mask \eqn{ \mathbf w } by taking the Maximum a priori estimates of the posterior density of the  random variables \eqn{ \boldsymbol \beta } and \eqn{ \mathbf w } with prior densities \eqn{\beta_j \sim \mathrm{Normal(0,\sigma^2)} } and \eqn{w_j \sim \mathrm{Bernoulli(\rho)} } using the reverse collapsed variational bayesian approximation.
}
\examples{

# Initial Data
X = c(66,70,69,68,67,72,73,70,57,63,70,78,67)
y = c(0,1,0,0,0,0,0,0,1,1,1,0,0)
new.X = c(66,70,68,59)

# Fit the model
fitted_model <- cvb_model(sigma = 10, rho = 0.1, X, y,
                add.intercept = TRUE, MAXITER = 100, EPS = 1e-5, verboseIter = FALSE)
fitted_model

}
